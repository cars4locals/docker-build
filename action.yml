name: 'Multiplatform docker build'
description: 'Build multiarch image and push to ecr'
inputs:
  ecr-repository:
    description: 'ECR repository identifier to push image to'
    required: true
  image-tag:
    description: 'The image tag'
    required: true
  context:
    description: 'Build context'
    required: false
    default: '.'
  file:
    description: 'Dockerfile path'
    required: false
    default: './Dockerfile'
  build-args:
    description: 'Build arguments'
    required: false
  platforms:
    description: 'Platforms to build to'
    required: false
    default: 'linux/amd64,linux/arm64'
  provenance:
    description: 'Provenance parameter'
    required: false
    default: 'false'
  aws-access-key-id:
    description: 'AWS access key id'
    required: true
  aws-secret-access-key:
    description: 'AWS access secret key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: false
    default: 'us-west-2'
outputs:
  image:
    description: "The resulting image"
    value: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repository }}:${{ inputs.image-tag }}
runs:
  using: "composite"
  steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Inspect builder
      if: ${{ github.event.inputs.docker == 'true' }}
      shell: bash
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Push docker multiplatform image
      id: build-push
      uses: docker/build-push-action@v4
      with:
        build-args: ${{ inputs.build-args }}
        provenance: ${{ inputs.provenance }}
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repository }}:${{ inputs.image-tag }}

    - name: Outputs
      shell: bash
      run: |
        echo "ImageId"
        echo "${{ steps.build-push.outputs.imageid }}"
        echo "Digest"
        echo "${{ steps.build-push.outputs.digest }}"
        echo "Metadata:"
        echo "${{ steps.build-push.outputs.metadata }}"
